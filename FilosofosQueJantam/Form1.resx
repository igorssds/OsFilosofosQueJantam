<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GBPlkC0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GBPlkC0AAAAASUVORK5CYII=
</value>
  </data>
</root>